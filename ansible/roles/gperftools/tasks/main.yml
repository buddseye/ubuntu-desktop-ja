---

- name: ensure gperftools installed
  stat:
    path: /usr/local/stow/gperftools-{{ gperftools_version }}
  register: install_dir

# - name: download archived source
#   get_url:
#     url: https://github.com/gperftools/gperftools/releases/download/gperftools-{{ gperftools_version }}/gperftools-{{ gperftools_version }}.tar.gz
#     dest: /tmp
#   when: not install_dir.stat.exists

- name: download archived source
  shell: curl -fsSL https://github.com/gperftools/gperftools/releases/download/gperftools-{{ gperftools_version }}/{gperftools-{{ gperftools_version }}.tar.gz} -o /tmp/#1
  when: not install_dir.stat.exists

- name: unarchive source
  become: yes
  unarchive:
    src: /tmp/gperftools-{{ gperftools_version }}.tar.gz
    dest: /usr/local/src
    remote_src: yes
  when: not install_dir.stat.exists

- name: compile and install
  become: yes
  shell: "{{ item }}"
  args:
    chdir: /usr/local/src/gperftools-{{ gperftools_version }}
  with_items:
    - ./configure --prefix=/usr/local/stow/gperftools-{{ gperftools_version }}
    - make
    - make install
  when: not install_dir.stat.exists

- name: stow
  become: yes
  shell: stow gperftools-{{ gperftools_version }}
  args:
    chdir: /usr/local/stow
  when: not install_dir.stat.exists
